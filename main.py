'''

1. Создать список и заполнить его элементами различных типов данных.
Реализовать скрипт проверки типа данных каждого элемента.
Использовать функцию type() для проверки типа.
Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.
'''

data = [1, 2, 3, 'Alex', 'John', 'Ben']

for i in data:
    print(type(i))



'''
2. Для списка реализовать обмен значений соседних элементов.
Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т. д.
При нечётном количестве элементов последний сохранить на своём месте.
Для заполнения списка элементов нужно использовать функцию input().
'''
my_list = input("Введите элементы списка: ").split()

for i in range(0, len(my_list)-1, 2):
    my_list[i], my_list[i+1] = my_list[i+1], my_list[i]

print(my_list)
'''
3. Пользователь вводит месяц в виде целого числа от 1 до 12.
Сообщить, к какому времени года относится месяц (зима, весна, лето, осень).
Напишите решения через list и dict.
'''

d = {
    1: "Зима",
    2: "Зима",
    12: "Зима",
    3: "Весна",
    4: "Весна",
    5: "Весна",
    6: "Лето",
    7: "Лето",
    8: "Лето",
    9: "Осень",
    10: "Осень",
    11: "Осень"
}
_list = ["зима", "зима", "весна", "весна", "весна", "лето", "лето", "лето", "осень", "осень", "осень", "зима"]

key = int(input())
print(_list[key-1])
print(d[key])

'''
4. Пользователь вводит строку из нескольких слов, разделённых пробелами.
Вывести каждое слово с новой строки. Строки нужно пронумеровать.
Если слово длинное, выводить только первые 10 букв в слове.
'''
str = input("Введите несколько слов: ").split(" ")

for i in str:
    print(i[0:10])

'''
5. Реализовать структуру «Рейтинг», представляющую собой набор натуральных чисел, который не возрастает.
У пользователя нужно запрашивать новый элемент рейтинга.
Если в рейтинге существуют элементы с одинаковыми значениями,
то новый элемент с тем же значением должен разместиться после них.
Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
Пользователь ввёл число 3. Результат: 7, 5, 3, 3, 3, 2.
Пользователь ввёл число 8. Результат: 8, 7, 5, 3, 3, 2.
Пользователь ввёл число 1. Результат: 7, 5, 3, 3, 2, 1.
Набор натуральных чисел можно задать сразу в коде, например, my_list = [7, 5, 3, 3, 2].
'''
my_list = [7, 5, 3, 3, 2]
new_rating = int(input("Введите рейтинг: "))
for i in range(0, 5):
    if my_list[i] == new_rating:

        my_list.insert(i, new_rating)
        break
    if i == 4 and my_list[i] > new_rating:
        my_list.append(new_rating)
    if i == 0 and my_list[i] < new_rating:
        my_list.insert(0, new_rating)
print(my_list)

'''
6. * Реализовать структуру данных «Товары».
Она должна представлять собой список кортежей.
Каждый кортеж хранит информацию об отдельном товаре.
В кортеже должно быть два элемента — номер товара и словарь с параметрами,
то есть характеристиками товара: название, цена, количество, единица измерения.
Структуру нужно сформировать программно, запросив все данные у пользователя.
Пример готовой структуры:

[
(1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
(2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
(3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
]

Нужно собрать аналитику о товарах.
Реализовать словарь, в котором каждый ключ — характеристика товара, например, название.
Тогда значение — список значений-характеристик, например, список названий товаров.
Пример:

{
“название”: [“компьютер”, “принтер”, “сканер”],
“цена”: [20000, 6000, 2000],
“количество”: [5, 2, 7],
“ед”: [“шт.”]
}
'''

list_of_tuples = []
name = ""
coast = 0.1
count = 0
unit = 0
value = ""
i = 1
while value.lower() != "e":
    value = input("Enter name (press 'e' to stop):\n")
    if value == "e":
        break
    name = value
    coast = float(input("Enter coast:\n"))
    count = int(input("Enter count:\n"))
    unit = input("Enter unit:\n")

    dic = {
        "название": name,
        "цена": coast,
        "количество": count,
        "ед": unit
    }
    new_tuple = (i, dic)
    i+=1
    list_of_tuples.append(new_tuple)
nameList = []
coastList = []
countList = []
unitList = []

# print(list_of_tuples)
print(list_of_tuples[0])
for i in list_of_tuples:
    tup = list_of_tuples[i]
    tup_dic = tup[1]
    nameList.append(tup_dic('название'))
    coastList.append(tup_dic('цена'))
    countList.append(tup_dic('количество'))
    unitList.append(tup_dic('ед'))

newDict = {
    'название': nameList,
    'цена': coastList,
    'количество': countList,
    'ед': unitList
}

print(newDict)
