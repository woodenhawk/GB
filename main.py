'''
1. Рализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.
'''

a = int(input("Введите первое число:"))
b = int(input("Введите второе число:"))
def div(a, b):
    try:
        c = a / b
        return c
    except ZeroDivisionError:
        print("На ноль делить нельзя")
print(div(a, b))


'''
2. Выполнить функцию, которая принимает несколько параметров, описывающих данные пользователя:
имя, фамилия, год рождения, город проживания, email, телефон.
Функция должна принимать параметры как именованные аргументы.
Осуществить вывод данных о пользователе одной строкой.
'''


def useruata(firstName, lastName, birthday, city, email, phone):
    data = firstName + " " + lastName + " " + birthday + " " + city + " " + email + " " + phone
    return data

print(userdata(firstName=input('Введите имя\n'),
               lastName=input('Введите фамилию\n'),
               birthday=input('Введите год рождения\n'),
               city=input('Введите город\n'),
               email=input('Введите почту\n'),
               phone=input('введите телефон\n')))
'''
3. Реализовать функцию my_func(),
которая принимает три позиционных аргумента и возвращает сумму наибольших двух аргументов.
'''

def my_func(a, b, c):
    newList = [a, b, c]
    maxFirst = max(newList)
    newList.remove(maxFirst)
    maxSecond = max(newList)
    return maxFirst+maxSecond
a = int(input("Введите первое число\n"))
b = int(input("Введите второе число\n"))
c = int(input("Введите третье число\n"))
print(my_func(a, b, c))

'''
4. Программа принимает действительное положительное число x и целое отрицательное число y.
Выполните возведение числа x в степень y. Задание реализуйте в виде функции my_func(x, y).
При решении задания нужно обойтись без встроенной функции возведения числа в степень.
Подсказка: попробуйте решить задачу двумя способами.
Первый — возведение в степень с помощью оператора **.
Второй — более сложная реализация без оператора **, предусматривающая использование цикла.
'''



def my_func(x, y):
    return x**y

x = int(input("Введите число x\n"))
y = int(input("Введите число y\n"))

print(my_func(x, y))

'''
5. Программа запрашивает у пользователя строку чисел, разделённых пробелом.
При нажатии Enter должна выводиться сумма чисел.
Пользователь может продолжить ввод чисел, разделённых пробелом и снова нажать Enter.
Сумма вновь введённых чисел будет добавляться к уже подсчитанной сумме.
Но если вместо числа вводится специальный символ, выполнение программы завершается.
Если специальный символ введён после нескольких чисел,
то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.
'''
sum = 0
while(True):
    numbers = input("введите число(нажмите 'ё' для остановки): ").split(" ")
    for i in numbers:
        try:
            sum += int(i)
        except:
            break
    print(sum)
    if i == "ё":
        break

'''
6. Реализовать функцию int_func(), принимающую слова из маленьких латинских букв и возвращающую их же,
но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
'''

def int_func(a = ""):
    return(a.capitalize())
a = input("Введите слова: ")
print(int_func(a))
'''
7. Продолжить работу над заданием.
В программу должна попадать строка из слов, разделённых пробелом.
Каждое слово состоит из латинских букв в нижнем регистре.
Нужно сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы.
Используйте написанную ранее функцию int_func().

'''
def int_func(a = ""):
    return(a.title())
a = input("Введите слова: ")
print(int_func(a))
